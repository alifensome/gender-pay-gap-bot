service: gender-pay-gap-bot-2
frameworkVersion: '2'
useDotenv: true

provider:
  name: aws
  runtime: nodejs14.x
  lambdaHashingVersion: 20201221

# you can overwrite defaults here
#  stage: dev
  region: eu-west-2
package:
  include:
    - ./dist/**
    - data/companyDataJoinedWithTweets.json
  exclude:
    - ./**
    - node_modules/**

functions:
  getCompanyByCompanyId:
    handler: dist/api/getCompanyHandler.getCompanyByCompanyId
    events:
     - httpApi:
         path: /company/{id}
         method: get

  getCompanyByTwitterId:
    handler: dist/api/getCompanyHandler.getCompanyByTwitterId
    events:
     - httpApi:
         path: /company/twitterId/{id}
         method: get

  getCompanyByTwitterHandle:
    handler: dist/api/getCompanyHandler.getCompanyByTwitterHandle
    events:
     - httpApi:
         path: /company/twitterHandle/{handle}
         method: get

# V2 
# TODO
# SQS
# EC2 + networking
# IAM
# Lambda function subscribing to SQS
# - Only one lambda at a time
# - Rate limited to 1 per minute


resources:
  Resources:
    # SQS for queuing tweets.
    TweetQueue:
      Type: "AWS::SQS::Queue"
      Properties:
        QueueName: "TweetQueue"
        MessageRetentionPeriod: 1209600 # 14 days retention.
        RedrivePolicy:
          deadLetterTargetArn: Fn::GetAtt: [ TweetQueueDeadLetter, Arn ]
          maxReceiveCount: 3

    TweetQueueDeadLetter:
      Type: "AWS::SQS::Queue"
      Properties:
        QueueName: "TweetQueueDeadLetter"
        MessageRetentionPeriod: 1209600 # 14 days retention.

# EC2 for Tweet listener and queuer
    TweetListenerQueuer:
      Type: AWS::EC2::Instance
      Properties: 
        ImageId: ami-0dd555eb7eb3b7c82 # Linux 2
        # KeyName: yourSshKeyName # This needs to be created manually. CloudFormation does not allow it
        InstanceType: t2.nano
        # SubnetId: // your subnetId
        # SecurityGroupIds:
        #   - // your security group IDs